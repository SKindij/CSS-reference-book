/*HTML
<div class="container">
  <header>HEADER</header>
    <aside>MENU</aside>
    <main>CONTENT</main>
  <footer>FOOTER</footer>
</div>
*/
.container {
  display: grid; 
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: 50px 350px 50px;
}
header {
  grid-column: span 12;
}
aside {
  grid-column: span 2;
}
main {
  grid-column: span 10;
}
footer {
  grid-column: span 12;
}
/* adaptability of the template for smartphones and tablets */
@media screen and (max-width: 768px) {
  aside {
    grid-column: span 6;
  }
  main {
    grid-column: span 6;
  }
}
@media screen and (max-width: 480px) {
  aside {
    grid-column: span 12;
  }
  main {
    grid-column: span 12;
  }
}

/* Properties that specify the size and number of columns or rows of the grid layout, respectively. */
.container {
  display: grid;
  /* 3 columns will be created */
  grid-template-columns: 40px auto 40%;
  /* 3 rows will be created */
  grid-template-rows: 250px 5vw 15rem;
}
/* You can explicitly name gridlines using square brackets: */
.container {
  display: grid;
  grid-template-columns: [start] 140px [line2] 250px [line3] 40px [end];
  grid-template-rows: [row1-start] 25rem [row1-end] 10vh [last];
}



